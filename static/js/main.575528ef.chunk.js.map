{"version":3,"sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Feedback/Feedback.styled.jsx","components/Feedback/Feedback.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["CustomContainer","styled","div","Container","children","CustomButton","button","Feedback","options","onAddFeedback","map","option","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","Good","Neutral","Bad","addFeedback","name","setState","prevState","console","log","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAEaA,EAAkBC,IAAOC,IAAV,4E,OCAfC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,cAACJ,EAAD,UAAkBI,KCDdC,EAAeJ,IAAOK,OAAV,mDCCZC,EAAW,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAClC,OACE,gCACE,uDACCD,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACN,EAAD,CAEEO,KAAK,SACLC,QAAS,kBAAMJ,EAAcE,IAH/B,SAKGA,GAJIA,UCPFG,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,gCACE,4CACA,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCdOC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,4BAAIA,KCGQC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,MAE5BG,QAAQC,IAAI,U,EAGdC,mBAAqB,kBACnB,EAAKV,MAAMC,KAAO,EAAKD,MAAME,QAAU,EAAKF,MAAMG,K,EAEpDQ,gCAAkC,kBAChC,EAAKX,MAAMC,KACPW,KAAKC,MAAO,EAAKb,MAAMC,KAAO,EAAKS,qBAAwB,KAC3D,G,4CAEN,WACE,MAA+BI,KAAKd,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACElB,QAAS8B,OAAOC,KAAKF,KAAKd,OAC1Bd,cAAe4B,KAAKV,cAErBU,KAAKJ,qBACJ,8BACE,cAAC,EAAD,CACElB,KAAMS,EACNR,QAASS,EACTR,IAAKS,EACLR,MAAOmB,KAAKJ,qBACZd,mBAAoBkB,KAAKH,sCAI7B,cAAC,EAAD,CAAcb,QAAQ,6B,GAzCCmB,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.575528ef.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const CustomContainer = styled.div`\n  background-color: #e12363;\n  padding: 10px;\n`;\n","import { CustomContainer } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <CustomContainer>{children}</CustomContainer>;\n};\n","import styled from '@emotion/styled';\n\nexport const CustomButton = styled.button`\n  margin-right: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { CustomButton } from './Feedback.styled';\n\nexport const Feedback = ({ options, onAddFeedback }) => {\n  return (\n    <div>\n      <h2>Please leave feedback</h2>\n      {options.map(option => (\n        <CustomButton\n          key={option}\n          type=\"button\"\n          onClick={() => onAddFeedback(option)}\n        >\n          {option}\n        </CustomButton>\n      ))}\n    </div>\n  );\n};\n\nFeedback.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport const Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => {\n  return (\n    <div>\n      <h2>Statistics</h2>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage} %</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { Component } from 'react';\nimport { Container } from '../Container/Container';\nimport { Feedback } from '../Feedback/Feedback';\nimport { Statistics } from '../Statistics/Statistics';\nimport { Notification } from '../Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    Good: 0,\n    Neutral: 0,\n    Bad: 0,\n  };\n\n  addFeedback = name => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n    console.log('Hello');\n  };\n\n  countTotalFeedback = () =>\n    this.state.Good + this.state.Neutral + this.state.Bad;\n\n  countPositiveFeedbackPercentage = () =>\n    this.state.Good\n      ? Math.round((this.state.Good / this.countTotalFeedback()) * 100)\n      : 0;\n\n  render() {\n    const { Good, Neutral, Bad } = this.state;\n    return (\n      <Container>\n        <Feedback\n          options={Object.keys(this.state)}\n          onAddFeedback={this.addFeedback}\n        />\n        {this.countTotalFeedback() ? (\n          <div>\n            <Statistics\n              good={Good}\n              neutral={Neutral}\n              bad={Bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </div>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}